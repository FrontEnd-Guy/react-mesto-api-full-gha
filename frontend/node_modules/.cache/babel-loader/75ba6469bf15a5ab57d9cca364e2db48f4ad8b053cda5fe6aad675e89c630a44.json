{"ast":null,"code":"/**\n * React Router v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath, createMemoryHistory, Action } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\nimport { createContext, useContext, useMemo, useRef, useEffect, useCallback, createElement, useState, useLayoutEffect, Children, isValidElement, Fragment } from 'react';\nconst NavigationContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, _ => params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\"));\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    :\n    // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(basename.length) || \"/\";\n}\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to);\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  let activeRef = useRef(false);\n  useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet(context) {\n  let outlet = useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  return useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    matches: parentMatches\n  } = useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches);\n}\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (matches == null) return null;\n  return matches.reduceRight((outlet, match, index) => {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref;\n  let historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex\n    });\n  }\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  let {\n    to,\n    replace,\n    state\n  } = _ref2;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate(to, {\n      replace,\n      state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref3;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (location == null) {\n    return null;\n  }\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  let {\n    children,\n    location\n  } = _ref4;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  let routes = [];\n  Children.forEach(children, element => {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };","map":{"version":3,"names":["parsePath","createMemoryHistory","Action","NavigationType","createPath","createContext","useContext","useMemo","useRef","useEffect","useCallback","createElement","useState","useLayoutEffect","Children","isValidElement","Fragment","NavigationContext","process","env","NODE_ENV","displayName","LocationContext","RouteContext","outlet","matches","invariant","cond","message","Error","warning","console","warn","e","alreadyWarned","warningOnce","key","generatePath","path","params","replace","_","matchRoutes","routes","locationArg","basename","location","pathname","stripBasename","branches","flattenRoutes","rankRouteBranches","i","length","matchRouteBranch","parentsMeta","parentPath","forEach","route","index","meta","relativePath","caseSensitive","childrenIndex","startsWith","slice","joinPaths","routesMeta","concat","children","push","score","computeScore","sort","a","b","compareIndexes","map","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","n","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","assign","pathnameBase","normalizePathname","pattern","matcher","paramNames","compilePath","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","endsWith","regexpSource","RegExp","undefined","value","decodeURIComponent","error","resolvePath","to","fromPathname","toPathname","search","hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","join","resolveTo","toArg","routePathnames","locationPathname","from","routePathnameIndex","toSegments","shift","getToPathname","toLowerCase","nextChar","charAt","paths","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","endsWithSlash","createHref","useLocation","useNavigationType","navigationType","useMatch","useNavigate","routePathnamesJson","JSON","stringify","activeRef","current","navigate","options","go","parse","state","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","useRoutes","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","element","_renderMatches","reduceRight","MemoryRouter","_ref","initialEntries","initialIndex","historyRef","history","setState","action","listen","Router","Navigate","_ref2","static","Outlet","props","Route","_props","_ref3","basenameProp","locationProp","Pop","staticProp","navigationContext","trailingPathname","Routes","_ref4","createRoutesFromChildren","type","apply","name","renderMatches","UNSAFE_LocationContext","UNSAFE_NavigationContext","UNSAFE_RouteContext"],"sources":["/Users/paul/Praktikum/dev/react-mesto-auth/node_modules/react-router/index.js"],"sourcesContent":["/**\n * React Router v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath, createMemoryHistory, Action } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\nimport { createContext, useContext, useMemo, useRef, useEffect, useCallback, createElement, useState, useLayoutEffect, Children, isValidElement, Fragment } from 'react';\n\nconst NavigationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, _ => params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\"));\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  let from;\n\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to);\n  let joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  let activeRef = useRef(false);\n  useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet(context) {\n  let outlet = useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  return useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    matches: parentMatches\n  } = useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches);\n}\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) return null;\n  return matches.reduceRight((outlet, match, index) => {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref;\n  let historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  let {\n    to,\n    replace,\n    state\n  } = _ref2;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate(to, {\n      replace,\n      state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n   process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref3;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  let {\n    children,\n    location\n  } = _ref4;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  let routes = [];\n  Children.forEach(children, element => {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };\n//# sourceMappingURL=index.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}