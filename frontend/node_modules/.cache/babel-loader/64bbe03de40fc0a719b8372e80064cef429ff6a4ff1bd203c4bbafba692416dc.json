{"ast":null,"code":"const BASE_URL = \"https://api.mesto-russia.nomoredomains.monster\";\nconst checkResponseStatus = response => {\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(`Error: ${response.status}`);\n};\nexport const signUp = async data => {\n  const res = await fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data),\n    credentials: 'include'\n  });\n  return checkResponseStatus(res);\n};\nexport const signIn = async data => {\n  const res = await fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data),\n    credentials: 'include'\n  });\n  console(res);\n  return checkResponseStatus(res);\n};\nexport const checkAuth = async token => {\n  const res = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    credentials: 'include'\n  });\n  return checkResponseStatus(res);\n};","map":{"version":3,"names":["BASE_URL","checkResponseStatus","response","ok","json","Promise","reject","status","signUp","data","res","fetch","method","headers","body","JSON","stringify","credentials","signIn","console","checkAuth","token","Authorization"],"sources":["/Users/paul/Praktikum/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"https://api.mesto-russia.nomoredomains.monster\";\n\nconst checkResponseStatus = (response) => {\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(`Error: ${response.status}`);\n};\n\nexport const signUp = async (data) => {\n  const res = await fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n    credentials: 'include',\n  });\n  return checkResponseStatus(res);\n};\n\nexport const signIn = async (data) => {\n  const res = await fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n    credentials: 'include',\n  });\n  console(res);\n  return checkResponseStatus(res);\n};\n\nexport const checkAuth = async (token) => {\n  const res = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    credentials: 'include',\n  });\n  return checkResponseStatus(res);\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,gDAAgD;AAEjE,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;EACxC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,QAAQ,CAACK,MAAO,EAAC,CAAC;AACpD,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOC,IAAI,IAAK;EACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC5CY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;IAC1BQ,WAAW,EAAE;EACf,CAAC,CAAC;EACF,OAAOhB,mBAAmB,CAACS,GAAG,CAAC;AACjC,CAAC;AAED,OAAO,MAAMQ,MAAM,GAAG,MAAOT,IAAI,IAAK;EACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC5CY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;IAC1BQ,WAAW,EAAE;EACf,CAAC,CAAC;EACFE,OAAO,CAACT,GAAG,CAAC;EACZ,OAAOT,mBAAmB,CAACS,GAAG,CAAC;AACjC,CAAC;AAED,OAAO,MAAMU,SAAS,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IAC9CY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAG,UAASD,KAAM;IACjC,CAAC;IACDJ,WAAW,EAAE;EACf,CAAC,CAAC;EACF,OAAOhB,mBAAmB,CAACS,GAAG,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}