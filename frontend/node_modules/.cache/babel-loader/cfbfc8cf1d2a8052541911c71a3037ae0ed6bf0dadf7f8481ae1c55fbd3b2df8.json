{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/paul/Praktikum/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/paul/Praktikum/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * React Router DOM v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { useRef, useState, useLayoutEffect, createElement, forwardRef, useCallback, useMemo } from 'react';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { Router, useHref, createPath, useLocation, useResolvedPath, useNavigate } from 'react-router';\nexport { MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createPath, createRoutesFromChildren, generatePath, matchPath, matchRoutes, parsePath, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes } from 'react-router';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"onClick\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"];\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} ////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    window = _ref.window;\n  var historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window\n    });\n  }\n  var history = historyRef.current;\n  var _useState = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n    children = _ref2.children,\n    window = _ref2.window;\n  var historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window\n    });\n  }\n  var history = historyRef.current;\n  var _useState3 = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n    children = _ref3.children,\n    history = _ref3.history;\n  var _useState5 = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    state = _useState6[0],\n    setState = _useState6[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nvar Link = /*#__PURE__*/forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n    reloadDocument = _ref4.reloadDocument,\n    _ref4$replace = _ref4.replace,\n    replace = _ref4$replace === void 0 ? false : _ref4$replace,\n    state = _ref4.state,\n    target = _ref4.target,\n    to = _ref4.to,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  var href = useHref(to);\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented && !reloadDocument) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = /*#__PURE__*/forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n    ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n    _ref5$caseSensitive = _ref5.caseSensitive,\n    caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n    _ref5$className = _ref5.className,\n    classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n    _ref5$end = _ref5.end,\n    end = _ref5$end === void 0 ? false : _ref5$end,\n    styleProp = _ref5.style,\n    to = _ref5.to,\n    children = _ref5.children,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  var location = useLocation();\n  var path = useResolvedPath(to);\n  var locationPathname = location.pathname;\n  var toPathname = path.pathname;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    toPathname = toPathname.toLowerCase();\n  }\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null].filter(Boolean).join(\" \");\n  }\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive\n  }) : styleProp;\n  return /*#__PURE__*/createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n} ////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref6 = _temp === void 0 ? {} : _temp,\n    target = _ref6.target,\n    replaceProp = _ref6.replace,\n    state = _ref6.state;\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to);\n  return useCallback(function (event) {\n    if (event.button === 0 && (\n    // Ignore everything but left clicks\n    !target || target === \"_self\") &&\n    // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here.\n\n      var replace = !!replaceProp || createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = useMemo(function () {\n    var searchParams = createSearchParams(location.search);\n    var _iterator = _createForOfIteratorHelper(defaultSearchParamsRef.current.keys()),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!searchParams.has(key)) {\n          defaultSearchParamsRef.current.getAll(key).forEach(function (value) {\n            searchParams.append(key, value);\n          });\n        }\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return searchParams;\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = useCallback(function (nextInit, navigateOptions) {\n    navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n  }, [navigate]);\n  return [searchParams, setSearchParams];\n}\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nexport { BrowserRouter, HashRouter, Link, NavLink, createSearchParams, HistoryRouter as unstable_HistoryRouter, useLinkClickHandler, useSearchParams };","map":{"version":3,"mappings":"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","names":["warning","cond","message","console","warn","Error","e","BrowserRouter","basename","_ref","children","window","historyRef","React","current","createBrowserHistory","history","action","location","state","setState","listen","React.createElement","Router","navigationType","navigator","HashRouter","_ref2","createHashHistory","HistoryRouter","_ref3","displayName","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link","LinkWithRef","ref","onClick","_ref4","reloadDocument","replace","target","to","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","createElement","NavLink","NavLinkWithRef","ariaCurrentProp","_ref5","caseSensitive","className","classNameProp","end","styleProp","style","useLocation","path","useResolvedPath","locationPathname","pathname","toPathname","toLowerCase","isActive","startsWith","charAt","length","ariaCurrent","undefined","filter","Boolean","join","replaceProp","navigate","useNavigate","button","preventDefault","createPath","useSearchParams","defaultInit","process","URLSearchParams","defaultSearchParamsRef","createSearchParams","searchParams","search","keys","key","has","getAll","forEach","value","append","setSearchParams","nextInit","navigateOptions","init","Array","isArray","Object","reduce","memo","concat","map","v"],"sources":["/Users/paul/Praktikum/dev/packages/react-router-dom/index.tsx"],"sourcesContent":["/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}