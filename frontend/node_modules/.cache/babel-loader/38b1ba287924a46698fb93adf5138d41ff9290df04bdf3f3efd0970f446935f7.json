{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paul/Praktikum/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/paul/Praktikum/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var BASE_URL=\"http://api.mesto-russia.nomoredomains.monster\";var checkResponseStatus=function checkResponseStatus(response){if(response.ok){return response.json();}return Promise.reject(\"Error: \".concat(response.status));};export var signUp=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",credentials:'include',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});case 2:res=_context.sent;return _context.abrupt(\"return\",checkResponseStatus(res));case 4:case\"end\":return _context.stop();}},_callee);}));return function signUp(_x){return _ref.apply(this,arguments);};}();export var signIn=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",credentials:'include',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});case 2:res=_context2.sent;return _context2.abrupt(\"return\",checkResponseStatus(res));case 4:case\"end\":return _context2.stop();}},_callee2);}));return function signIn(_x2){return _ref2.apply(this,arguments);};}();export var checkAuth=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(token){var res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",credentials:'include',headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}});case 2:res=_context3.sent;return _context3.abrupt(\"return\",checkResponseStatus(res));case 4:case\"end\":return _context3.stop();}},_callee3);}));return function checkAuth(_x3){return _ref3.apply(this,arguments);};}();","map":{"version":3,"names":["BASE_URL","checkResponseStatus","response","ok","json","Promise","reject","status","signUp","data","fetch","method","credentials","headers","body","JSON","stringify","res","signIn","checkAuth","token","Authorization"],"sources":["/Users/paul/Praktikum/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"http://api.mesto-russia.nomoredomains.monster\";\n\nconst checkResponseStatus = (response) => {\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(`Error: ${response.status}`);\n};\n\nexport const signUp = async (data) => {\n  const res = await fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return checkResponseStatus(res);\n};\n\nexport const signIn = async (data) => {\n  const res = await fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return checkResponseStatus(res);\n};\n\nexport const checkAuth = async (token) => {\n  const res = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return checkResponseStatus(res);\n};\n"],"mappings":"kTAAA,GAAMA,SAAQ,CAAG,+CAA+C,CAEhE,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIC,QAAQ,CAAK,CACxC,GAAIA,QAAQ,CAACC,EAAE,CAAE,CACf,MAAOD,SAAQ,CAACE,IAAI,EAAE,CACxB,CACA,MAAOC,QAAO,CAACC,MAAM,kBAAWJ,QAAQ,CAACK,MAAM,EAAG,CACpD,CAAC,CAED,MAAO,IAAMC,OAAM,4FAAG,iBAAOC,IAAI,iJACbC,MAAK,WAAIV,QAAQ,YAAW,CAC5CW,MAAM,CAAE,MAAM,CACdC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAC3B,CAAC,CAAC,QALIQ,GAAG,+CAMFhB,mBAAmB,CAACgB,GAAG,CAAC,uDAChC,kBARYT,OAAM,4CAQlB,CAED,MAAO,IAAMU,OAAM,6FAAG,kBAAOT,IAAI,sJACbC,MAAK,WAAIV,QAAQ,YAAW,CAC5CW,MAAM,CAAE,MAAM,CACdC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAC3B,CAAC,CAAC,QALIQ,GAAG,iDAMFhB,mBAAmB,CAACgB,GAAG,CAAC,yDAChC,kBARYC,OAAM,8CAQlB,CAED,MAAO,IAAMC,UAAS,6FAAG,kBAAOC,KAAK,sJACjBV,MAAK,WAAIV,QAAQ,cAAa,CAC9CW,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCQ,aAAa,kBAAYD,KAAK,CAChC,CACF,CAAC,CAAC,QAPIH,GAAG,iDAQFhB,mBAAmB,CAACgB,GAAG,CAAC,yDAChC,kBAVYE,UAAS,8CAUrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}