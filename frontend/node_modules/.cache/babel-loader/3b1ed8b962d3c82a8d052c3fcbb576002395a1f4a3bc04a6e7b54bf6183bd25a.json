{"ast":null,"code":"import { apiConfig } from \"./constants\";\nclass API {\n  constructor(config) {\n    this.headers = config.headers;\n    this.baseUrl = config.baseUrl;\n  }\n  _checkResponseStatus(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    }).then(res => this._checkResponseStatus(res));\n  }\n  editUserInfo(data) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkResponseStatus(res));\n  }\n  createCard(card) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(card)\n    }).then(res => this._checkResponseStatus(res));\n  }\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._checkResponseStatus(res));\n  }\n  getCardsList() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers\n    }).then(res => this._checkResponseStatus(res));\n  }\n  putLike(id) {\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(res => this._checkResponseStatus(res));\n  }\n  deleteLike(id) {\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._checkResponseStatus(res));\n  }\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n        method: 'PUT',\n        headers: this.headers\n      }).then(res => this._checkResponseStatus(res));\n    }\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._checkResponseStatus(res));\n  }\n  updateAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify(avatar)\n    }).then(res => this._checkResponseStatus(res));\n  }\n}\nexport const api = new API(apiConfig);","map":{"version":3,"names":["apiConfig","API","constructor","config","headers","baseUrl","_checkResponseStatus","response","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","res","editUserInfo","data","body","JSON","stringify","name","about","createCard","card","deleteCard","id","getCardsList","putLike","deleteLike","changeLikeCardStatus","isLiked","updateAvatar","avatar","api"],"sources":["/Users/paul/Praktikum/dev/mesto-react/src/utils/API.js"],"sourcesContent":["import { apiConfig } from \"./constants\";\n\nclass API {\n    constructor(config){\n        this.headers = config.headers;\n        this.baseUrl = config.baseUrl;\n    };\n\n    _checkResponseStatus(response){\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(`Ошибка: ${response.status}`);\n    }\n\n    getUserInfo(){\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: this.headers\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n\n    editUserInfo(data){\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n              })\n        })\n        .then(res => this._checkResponseStatus(res))\n    };  \n    \n    createCard(card){\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify(card),\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n\n    deleteCard(id){\n        return fetch(`${this.baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n\n    getCardsList(){\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'GET',\n            headers: this.headers\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n\n    putLike(id){\n        return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this.headers\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n    \n    deleteLike(id){\n        return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n\n    changeLikeCardStatus(id, isLiked){\n        if (isLiked){\n            return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n                method: 'PUT',\n                headers: this.headers\n            })\n            .then(res => this._checkResponseStatus(res))\n        }  \n        return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n\n    updateAvatar(avatar){\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify(avatar)\n        })\n        .then(res => this._checkResponseStatus(res))\n    };\n}\n\nexport const api = new API(apiConfig);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}